library(TCGAbiolinks)
library(edgeR)
library(SummarizedExperiment)
library(biomaRt)
library(dplyr)
data <- readRDS("counts_brca.rds")
tumor <- readRDS("tumor_brca.rds")
normal <- readRDS("normal_brca.rds")

row_data <- rowData(data)
cou <- assay(data)

protein_coding_genes <- row_data$gene_type == "protein_coding"
protein_coding_counts <- cou[protein_coding_genes, ]

protein_coding_counts <- protein_coding_counts[rowSums(protein_coding_counts) > 10, ]

counts <- data[rownames(protein_coding_counts), ]


coln <- colnames(normal)
colt <- colnames(tumor)
counts <- cbind(counts[, coln], counts[, colt])

Cond1type <- "Normal"
Cond2type <- "Tumor"
tumorType <- factor(x = rep(c(Cond1type ,Cond2type), c(length(coln), length(colt))), levels = c(Cond1type ,Cond2type))
design <- model.matrix(~tumorType)

dge <- DGEList(assay(counts), design = design)
keep <- filterByExpr(dge, design = design)
y <- dge[keep,,keep.lib.sizes = F]
y <- calcNormFactors(y)

y <- estimateDisp(y, design)
fit <- glmQLFit(y, design)
qlf <- glmQLFTest(fit, coef = 2)
summary(dgelm <- decideTestsDGE(qlf, p = 0.01, adjust.method = "BH"))


topTable <- topTags(qlf, n = Inf)
results <- topTable$table

# Check the structure of the results
str(results)

# Classify genes based on log2 fold change threshold
log2FC_threshold <- 1

results$change <- "Unchanged"
results$change[abs(results$logFC) > log2FC_threshold] <- "Upregulated"
results$change[absresults$logFC < -log2FC_threshold] <- "Downregulated"

# Summarize the number of upregulated, downregulated, and unchanged genes
summary_results <- table(results$change)

table(abs(results$logFC) < 1)


results$FDR <- -log10(results$FDR)

png(file = "volcano_plot.png", width = 1000, height = 800)
plot(results$logFC,results$FDR,pch=16)
# points(results["logFC"],-log10(result["FDR"]),pch=16,col="red")
dev.off()


ens2symbol <- function(ids) {
  # Extract Ensembl IDs without version numbers
  ids <- gsub("\\..*$", "", ids)
  
  # Create a Biomart object
  mart <- useDataset("hsapiens_gene_ensembl", useMart("ensembl"))
  
  # Get HGNC symbols for the Ensembl IDs
  genes <- getBM(filters = "ensembl_gene_id", 
                 attributes = c("ensembl_gene_id", "hgnc_symbol", "entrezgene_id"),
                 values = ids, mart = mart)
  
  return(genes)
}


dg <- as.data.frame(dgelm)
remove_version <- function(ids) {
  return(sub("\\..*$", "", ids))
}

dg$ensembl_gene_id <- remove_version(row.names(dg))

df <- ens2symbol(row.names(dgelm))
res_df <- merge(df, dg, by = "ensembl_gene_id")
r <- res_df %>% filter(tumorTypeTumor == 1 | tumorTypeTumor == -1)
r <- r[, c(2, 4)]
write.table(dgelm, "test.txt", col.names = FALSE, quote = FALSE)

r_ <- r[!is.na(r$hgnc_symbol), ]
bioclite("org.Hs.eg.db")
